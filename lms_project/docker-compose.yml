version: '3.9'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENV_FILE: .env
    image: backend:latest
    command: sh -c "wait-for-it db:5432 -- python manage.py collectstatic --no-input &&
                    wait-for-it db:5432 -- python manage.py makemigrations &&
                    wait-for-it db:5432 -- python manage.py migrate &&
                    gunicorn --workers=4 --reload --max-requests=100 lms_project.wsgi -b 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://db:5432"]
    networks:
      - django-network
    volumes:
      - .:/code/
      - media:/code/media
      - static:/code/static
      - .env:/code/.env

  nginx:
    container_name: nginx
    working_dir: /lms_project
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - static:/code/static
      - media:/code/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - django-network

  db:
    container_name: db
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - django-network

  redis:
    image: redis:6.0.10-alpine
    logging:
      driver: none
    networks:
      - django-network

networks:
  django-network:
    driver: bridge

volumes:
  postgres_data:
  static:
  media: